name: Build and deploy image

on:
  release:
    types: [created]


jobs:
  build_and_deploy:
    name: Build and deploy image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Create tags
        id: create_tags
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}
        run: |
          tag_name="${{ env.TAG_NAME }}"

          if [[ ! "${tag_name}" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            echo "::error::Tag name must be in the format vYY.MM.DD.n"
            exit 1
          fi

          tag_name="${tag_name#v}"  # Remove the leading "v"

          tags_prefix="${{ vars.DOCKER_USER }}/${{ vars.DOCKER_IMAGE }}"
          deploy_tag="${tags_prefix}:${tag_name}"
          all_tags="${tags_prefix}:latest,${deploy_tag}"

          docker_output="docker_tags=${all_tags}"
          deploy_output="deploy_tag=${deploy_tag}"

          echo "${docker_output}"
          echo "${docker_output}" >> $GITHUB_OUTPUT

          echo "${deploy_output}"
          echo "${deploy_output}" >> $GITHUB_OUTPUT

          sed -i "s/^version = .*/version = \"${tag_name}\"/" pyproject.toml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: ${{ steps.create_tags.outputs.docker_tags }}
          push: true
